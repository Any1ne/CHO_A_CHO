import { NextResponse } from "next/server";
import { Resend } from "resend";

const resend = new Resend(process.env.RESEND_API_KEY);

export async function POST(req: Request) {
  try {
    const { name, email, message } = await req.json();

    if (!name || !email || !message) {
      return NextResponse.json({ error: "–í—Å—ñ –ø–æ–ª—è –æ–±–æ–≤ º—è–∑–∫–æ–≤—ñ" }, { status: 400 });
    }

    const html = `
      <h2>–ù–æ–≤–∏–π –∑–∞–ø–∏—Ç –∑ —Ñ–æ—Ä–º–∏ –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –∑–≤ º—è–∑–∫—É</h2>
      <p><strong>–Ü–º º—è:</strong> ${name}</p>
      <p><strong>Email:</strong> ${email}</p>
      <p><strong>–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:</strong></p>
      <p>${message.replace(/\n/g, "<br>")}</p>
    `;

    const response = await resend.emails.send({
  from: `CHO A CHO Shop <${process.env.SEND_EMAIL}>`,
  to: [`${process.env.ADMIN_EMAIL}`],
  subject: "–ù–æ–≤–∏–π –∑–∞–ø–∏—Ç –∑ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ—ó —Ñ–æ—Ä–º–∏",
  html,
});

if (response.error) {
  console.error("Email error:", response.error);
  return NextResponse.json({ error: "–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ email" }, { status: 500 });
}


    return NextResponse.json({ success: true});
  } catch (error) {
    console.error("üî¥ Contact form email error:", error);
    return NextResponse.json({ error: "–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è" }, { status: 500 });
  }
}
