"use client";

import { Button } from "@/components/ui/button";
import { Skeleton } from "@/components/ui/skeleton"; // üß© –¥–æ–¥–∞–Ω–æ
import { useRouter, useSearchParams } from "next/navigation";
import { useEffect, useState } from "react";
import { useDispatch } from "react-redux";
import { AppDispatch } from "@/store/types";
import { checkOrderStatus } from "@/store/slices/checkoutSlice";
import { OrderSummary } from "@/types";

export default function SuccessPageClient() {
  const router = useRouter();
  const searchParams = useSearchParams();
  const dispatch = useDispatch<AppDispatch>();

  const [order, setOrder] = useState<OrderSummary | null>(null);
  const [loading, setLoading] = useState(true);

  const orderId = searchParams.get("orderId");

  useEffect(() => {
    if (!orderId) {
      router.replace("/");
      return;
    }

    const fetchOrder = async () => {
      const resultAction = await dispatch(checkOrderStatus(orderId));

      if (
        checkOrderStatus.fulfilled.match(resultAction) &&
        resultAction.payload.orderData
      ) {
        setOrder(resultAction.payload.orderData);
      }

      setLoading(false);
    };

    fetchOrder();
  }, [orderId, dispatch, router]);

  if (loading) {
    return (
      <div className="flex flex-col items-center justify-center min-h-[80vh] p-4 mt-[6rem] md:mt-[8rem] space-y-6 w-full max-w-md mx-auto">
        <Skeleton className="h-8 w-3/4" />
        <Skeleton className="h-5 w-full" />
        <Skeleton className="h-48 w-full rounded-md" />
        <Skeleton className="h-10 w-40" />
      </div>
    );
  }

  if (!order) return null;

  // console.log("--ORDER SUMMARY CITY", order.checkoutSummary.deliveryInfo?.city)
  return (
    <div className="flex flex-col items-center justify-center min-h-[80vh] text-center p-4 mt-[6rem] md:mt-[8rem]">
      <h1 className="text-3xl font-bold mb-4">–î—è–∫—É—î–º–æ –∑–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!</h1>
      <p className="mb-6 text-lg text-muted-foreground">
        –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ. –û—á—ñ–∫—É–π—Ç–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –Ω–∞ email –∞–±–æ
        —Ç–µ–ª–µ—Ñ–æ–Ω.
      </p>

      <div className="bg-muted p-4 rounded-md text-left w-full max-w-md mb-6 shadow">
        <h2 className="text-xl font-semibold mb-2">–ß–µ–∫ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</h2>
        <p>
          <strong>–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:</strong> {order.orderNumber}
        </p>
        <p>
          <strong>–ü–Ü–ë:</strong> {order.checkoutSummary.contactInfo?.firstName}
        </p>
        <p>
          <strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> {order.checkoutSummary.contactInfo?.phone}
        </p>
        <p>
          <strong>Email:</strong> {order.checkoutSummary.contactInfo?.email}
        </p>
        <p>
          <strong>–ú—ñ—Å—Ç–æ:</strong>{" "}
          {order.checkoutSummary.deliveryInfo?.city.Description}
        </p>
        <p>
          <strong>–î–æ—Å—Ç–∞–≤–∫–∞:</strong>{" "}
          {order.checkoutSummary.deliveryInfo?.deliveryMethod === "branch"
            ? `–£ –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è ‚Ññ${order.checkoutSummary.deliveryInfo?.branchNumber}`
            : `–ù–∞ –∞–¥—Ä–µ—Å—É: ${order.checkoutSummary.deliveryInfo?.address}`}
        </p>
        <p>
          <strong>–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞:</strong>{" "}
          {order.checkoutSummary.isWholesale ? "–¢–∞–∫" : "–ù—ñ"}
        </p>
        <p>
          <strong>–û–ø–ª–∞—Ç–∞:</strong>{" "}
          {order.checkoutSummary.paymentInfo?.paymentMethod === "cod"
            ? "–ü—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ"
            : "Monobank Pay"}
        </p>
        <p className="mt-2 font-bold text-lg">
          –î–æ —Å–ø–ª–∞—Ç–∏: ‚Ç¥{order.total.toFixed(2)}
        </p>
      </div>

      <Button onClick={() => router.push("/")}>–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –Ω–∞ –≥–æ–ª–æ–≤–Ω—É</Button>
    </div>
  );
}
